services:
  mongo:
    image: mongo
    container_name: mongo-container-for-leadmanagementSystem
    restart: always
    ports:
      - "${MONGO_PORT}:${MONGO_PORT}"
    volumes:
      - mongo_lead_management_system_volume:/data/db
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD}
    networks:
      - lead_management_system_network
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 40s
  
  redis:
    image: redis
    container_name: redis-container-for-leadmanagementSystem
    restart: always
    ports:
      - "${REDIS_PORT}:${REDIS_PORT}"
    networks:
      - lead_management_system_network
    volumes:
      - redis_lead_management_system_volume:/data
    command: ["redis-server", "--requirepass", "${REDIS_PASSWORD}"]

  # Express API service
  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: expressApi-container-for-leadmanagementSystem
    restart: always
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - PORT=3000
      - MONGO_DB_NAME=${MONGO_DB_NAME}
      - MONGO_USERNAME=${MONGO_USERNAME}
      - MONGO_PASSWORD=${MONGO_PASSWORD}
      - MONGO_HOST=${MONGO_HOST}
      - MONGO_PORT=${MONGO_PORT}
      - BCRYPT_SALT_ROUNDS=${BCRYPT_SALT_ROUNDS}
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PORT=${REDIS_PORT}
      - REDIS_TLS=${REDIS_TLS}
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    depends_on:
      mongo:
        condition: service_healthy
    networks:
      - lead_management_system_network
    volumes:
      - ./logs:/app/logs

networks:
  lead_management_system_network:
    driver: bridge

volumes:
  mongo_lead_management_system_volume:
    driver: local
  redis_lead_management_system_volume:
    driver: local